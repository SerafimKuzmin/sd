<?xml version="1.0" encoding="UTF-8"?>
<project version="4">
  <component name="AutoImportSettings">
    <option name="autoReloadType" value="ALL" />
  </component>
  <component name="ChangeListManager">
    <list default="true" id="61fdad8b-c5aa-426c-82ba-e8a3570a35b9" name="Changes" comment="">
      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/cmd/mini_imdb/mini_imdb.go" beforeDir="false" afterPath="$PROJECT_DIR$/cmd/mini_imdb/mini_imdb.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Auth/repository/mongo/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Auth/repository/mongo/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Auth/repository/postgres/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Auth/repository/postgres/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Auth/repository/redis/auth.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Auth/repository/redis/auth.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Auth/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Auth/usecase/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Auth/usecase/usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Auth/usecase/usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Country/delivery/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Country/delivery/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Country/repository/mongo/country.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Country/repository/mongo/country.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Country/repository/postgres/country.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Country/repository/postgres/country.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Country/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Country/usecase/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Country/usecase/usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Country/usecase/usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Film/delivery/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Film/delivery/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Film/repository/mongo/film.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Film/repository/mongo/film.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Film/repository/postgres/film.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Film/repository/postgres/film.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Film/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Film/usecase/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Film/usecase/usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Film/usecase/usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/List/repository/postgres/list.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/List/repository/postgres/list.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/List/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/List/usecase/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/List/usecase/usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/List/usecase/usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Person/delivery/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Person/delivery/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Person/repository/mongo/person.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Person/repository/mongo/person.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Person/repository/postgres/person.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Person/repository/postgres/person.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Person/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Person/usecase/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/Person/usecase/usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/Person/usecase/usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/PersonalRating/delivery/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/PersonalRating/delivery/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/PersonalRating/repository/mongo/personal_rating.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/PersonalRating/repository/mongo/personal_rating.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/PersonalRating/repository/postgres/personal_rating.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/PersonalRating/repository/postgres/personal_rating.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/PersonalRating/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/PersonalRating/usecase/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/PersonalRating/usecase/usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/PersonalRating/usecase/usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/User/delivery/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/User/delivery/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/User/repository/mongo/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/User/repository/mongo/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/User/repository/postgres/user.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/User/repository/postgres/user.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/User/repository/repository.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/User/usecase/repository.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/internal/User/usecase/usecase.go" beforeDir="false" afterPath="$PROJECT_DIR$/internal/User/usecase/usecase.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/log/app.log" beforeDir="false" afterPath="$PROJECT_DIR$/log/app.log" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../docs/img/component.drawio.png" beforeDir="false" afterPath="$PROJECT_DIR$/../docs/img/component.drawio.png" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../dump.rdb" beforeDir="false" afterPath="$PROJECT_DIR$/../dump.rdb" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/handlers/handler.go" beforeDir="false" afterPath="$PROJECT_DIR$/../frontend/handlers/handler.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/models/models.go" beforeDir="false" afterPath="$PROJECT_DIR$/../frontend/models/models.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/utils/checkers.go" beforeDir="false" afterPath="$PROJECT_DIR$/../frontend/utils/checkers.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/view/input.go" beforeDir="false" afterPath="$PROJECT_DIR$/../frontend/view/input.go" afterDir="false" />
      <change beforePath="$PROJECT_DIR$/../frontend/view/output.go" beforeDir="false" afterPath="$PROJECT_DIR$/../frontend/view/output.go" afterDir="false" />
    </list>
    <option name="SHOW_DIALOG" value="false" />
    <option name="HIGHLIGHT_CONFLICTS" value="true" />
    <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
    <option name="LAST_RESOLUTION" value="IGNORE" />
  </component>
  <component name="FileTemplateManagerImpl">
    <option name="RECENT_TEMPLATES">
      <list>
        <option value="Go File" />
      </list>
    </option>
  </component>
  <component name="GOROOT" url="file:///usr/local/go" />
  <component name="Git.Settings">
    <option name="RECENT_GIT_ROOT_PATH" value="$PROJECT_DIR$/.." />
  </component>
  <component name="MarkdownSettingsMigration">
    <option name="stateVersion" value="1" />
  </component>
  <component name="ProjectId" id="2O5uvZqYWM72kYKhPbcydvx1M1f" />
  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
    <ConfirmationsSetting value="1" id="Add" />
  </component>
  <component name="ProjectViewState">
    <option name="hideEmptyMiddlePackages" value="true" />
    <option name="showLibraryContents" value="true" />
  </component>
  <component name="PropertiesComponent"><![CDATA[{
  "keyToString": {
    "ASKED_ADD_EXTERNAL_FILES": "true",
    "DefaultGoTemplateProperty": "Go File",
    "RunOnceActivity.OpenProjectViewOnStart": "true",
    "RunOnceActivity.ShowReadmeOnStart": "true",
    "RunOnceActivity.go.format.on.save.advertiser.fired": "true",
    "RunOnceActivity.go.formatter.settings.were.checked": "true",
    "RunOnceActivity.go.migrated.go.modules.settings": "true",
    "RunOnceActivity.go.modules.go.list.on.any.changes.was.set": "true",
    "RunOnceActivity.go.vendoring.notification.had.been.shown": "true",
    "RunOnceActivity.go.watchers.conflict.with.on.save.actions.check.performed": "true",
    "WebServerToolWindowFactoryState": "false",
    "go.import.settings.migrated": "true",
    "last_opened_file_path": "/Users/serafim/go/src/github.com/SerafimKuzmin/sd/backend/internal/List/repository/mocks",
    "node.js.detected.package.eslint": "true",
    "node.js.selected.package.eslint": "(autodetect)"
  }
}]]></component>
  <component name="RecentsManager">
    <key name="CopyFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/List/repository/mocks" />
    </key>
    <key name="MoveFile.RECENT_KEYS">
      <recent name="$PROJECT_DIR$/internal/User/usecase" />
      <recent name="$PROJECT_DIR$/internal/PersonalRating/usecase" />
      <recent name="$PROJECT_DIR$/internal/Person/usecase" />
      <recent name="$PROJECT_DIR$/internal/List/usecase" />
      <recent name="$PROJECT_DIR$/internal/Film/usecase" />
    </key>
  </component>
  <component name="RunManager" selected="Go Build.go build github.com/SerafimKuzmin/sd/backend/cmd">
    <configuration name="go build github.com/SerafimKuzmin/sd/backend/cmd" type="GoApplicationRunConfiguration" factoryName="Go Application" temporary="true" nameIsGenerated="true">
      <module name="backend" />
      <working_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="github.com/SerafimKuzmin/sd/backend/cmd" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$/cmd/main.go" />
      <method v="2" />
    </configuration>
    <configuration name="TestUsecaseAuth in timetracker/internal/Auth/usecase" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$/internal/Auth/usecase" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="timetracker/internal/Auth/usecase" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUsecaseAuth\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUsecaseAuth/not_found in timetracker/internal/Auth/usecase" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$/internal/Auth/usecase" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="timetracker/internal/Auth/usecase" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUsecaseAuth\E$/^\Qnot_found\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUsecaseAuth/success in timetracker/internal/Auth/usecase" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$/internal/Auth/usecase" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="timetracker/internal/Auth/usecase" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUsecaseAuth\E$/^\Qsuccess\E$" />
      <method v="2" />
    </configuration>
    <configuration name="TestUsecaseDeleteCookie in timetracker/internal/Auth/usecase" type="GoTestRunConfiguration" factoryName="Go Test" temporary="true" nameIsGenerated="true">
      <module name="src" />
      <working_directory value="$PROJECT_DIR$/internal/Auth/usecase" />
      <root_directory value="$PROJECT_DIR$" />
      <kind value="PACKAGE" />
      <package value="timetracker/internal/Auth/usecase" />
      <directory value="$PROJECT_DIR$" />
      <filePath value="$PROJECT_DIR$" />
      <framework value="gotest" />
      <pattern value="^\QTestUsecaseDeleteCookie\E$" />
      <method v="2" />
    </configuration>
    <recent_temporary>
      <list>
        <item itemvalue="Go Build.go build github.com/SerafimKuzmin/sd/backend/cmd" />
        <item itemvalue="Go Test.TestUsecaseAuth in timetracker/internal/Auth/usecase" />
        <item itemvalue="Go Test.TestUsecaseAuth/not_found in timetracker/internal/Auth/usecase" />
        <item itemvalue="Go Test.TestUsecaseAuth/success in timetracker/internal/Auth/usecase" />
        <item itemvalue="Go Test.TestUsecaseDeleteCookie in timetracker/internal/Auth/usecase" />
      </list>
    </recent_temporary>
  </component>
  <component name="SpellCheckerSettings" RuntimeDictionaries="0" Folders="0" CustomDictionaries="0" DefaultDictionary="application-level" UseSingleDictionary="true" transferred="true" />
  <component name="TypeScriptGeneratedFilesManager">
    <option name="version" value="3" />
  </component>
  <component name="Vcs.Log.Tabs.Properties">
    <option name="TAB_STATES">
      <map>
        <entry key="MAIN">
          <value>
            <State />
          </value>
        </entry>
      </map>
    </option>
  </component>
  <component name="VgoProject">
    <settings-migrated>true</settings-migrated>
  </component>
  <component name="XDebuggerManager">
    <breakpoint-manager>
      <breakpoints>
        <line-breakpoint enabled="true" type="DlvLineBreakpoint">
          <url>file://$PROJECT_DIR$/internal/List/repository/postgres/list.go</url>
          <line>194</line>
          <option name="timeStamp" value="1" />
        </line-breakpoint>
      </breakpoints>
    </breakpoint-manager>
  </component>
</project>